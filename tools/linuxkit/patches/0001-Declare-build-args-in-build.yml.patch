From fed2c444497a9eb8dddee02f180a67a95b912280 Mon Sep 17 00:00:00 2001
From: Yuri Volchkov <yuri@zededa.com>
Date: Thu, 9 Jun 2022 15:09:04 +0000
Subject: [PATCH] Declare build-args in build.yml

This allows multiple build flavors for a single codebase, without
sacrificing reproducible builds. The build-args are set in build.yml,
which is typically under the source control (if it is not, then no
reproducible builds are possible anyways). Meaning that mutating
build-args would result in setting "dirty" flag.

Intended use of this commit is to switch between build flavors by
specifying a different yaml file (presumably also under the version
control)  by  `-build-yml` option.

Because it is impossible to build a final image from packages in
cache, the test for this feature relies on the `RUN echo $build-arg`
output during the `pkg build` process.

Cherry-picked from
1a013f442446eb48062550ba7c0b3f8707e85aaa

Signed-off-by: Yuri Volchkov <yuri@zededa.com>
---
 src/cmd/linuxkit/pkglib/build.go               |  6 ++++++
 src/cmd/linuxkit/pkglib/pkglib.go              |  3 +++
 test/cases/000_build/030_build_args/Dockerfile |  7 +++++++
 test/cases/000_build/030_build_args/build.yml  |  7 +++++++
 test/cases/000_build/030_build_args/test.sh    | 18 ++++++++++++++++++
 5 files changed, 41 insertions(+)
 create mode 100644 test/cases/000_build/030_build_args/Dockerfile
 create mode 100644 test/cases/000_build/030_build_args/build.yml
 create mode 100755 test/cases/000_build/030_build_args/test.sh

diff --git a/src/cmd/linuxkit/pkglib/build.go b/src/cmd/linuxkit/pkglib/build.go
index 0d822aa5f..6b9fcfb9d 100644
--- a/src/cmd/linuxkit/pkglib/build.go
+++ b/src/cmd/linuxkit/pkglib/build.go
@@ -169,6 +169,12 @@ func (p Pkg) Build(bos ...BuildOpt) error {
 			args = append(args, "--label=org.mobyproject.config="+string(b))
 		}
 
+		if p.buildArgs != nil {
+			for _, buildArg := range *p.buildArgs {
+				args = append(args, "--build-arg", buildArg)
+			}
+		}
+
 		args = append(args, "--label=org.mobyproject.linuxkit.version="+version.Version)
 		args = append(args, "--label=org.mobyproject.linuxkit.revision="+version.GitCommit)
 
diff --git a/src/cmd/linuxkit/pkglib/pkglib.go b/src/cmd/linuxkit/pkglib/pkglib.go
index c5c1108a5..a3440d18d 100644
--- a/src/cmd/linuxkit/pkglib/pkglib.go
+++ b/src/cmd/linuxkit/pkglib/pkglib.go
@@ -25,6 +25,7 @@ type pkgInfo struct {
 	DisableContentTrust bool              `yaml:"disable-content-trust"`
 	DisableCache        bool              `yaml:"disable-cache"`
 	Config              *moby.ImageConfig `yaml:"config"`
+	BuildArgs    *[]string         `yaml:"buildArgs,omitempty"`
 	Depends             struct {
 		DockerImages struct {
 			TargetDir string   `yaml:"target-dir"`
@@ -53,6 +54,7 @@ type Pkg struct {
 	trust         bool
 	cache         bool
 	config        *moby.ImageConfig
+	buildArgs     *[]string
 	dockerDepends dockerDepends
 
 	// Internal state
@@ -251,6 +253,7 @@ func NewFromCLI(fs *flag.FlagSet, args ...string) (Pkg, error) {
 		trust:         !pi.DisableContentTrust,
 		cache:         !pi.DisableCache,
 		config:        pi.Config,
+		buildArgs:     pi.BuildArgs,
 		dockerDepends: dockerDepends,
 		dirty:         dirty,
 		path:          pkgPath,
diff --git a/test/cases/000_build/030_build_args/Dockerfile b/test/cases/000_build/030_build_args/Dockerfile
new file mode 100644
index 000000000..edc852693
--- /dev/null
+++ b/test/cases/000_build/030_build_args/Dockerfile
@@ -0,0 +1,7 @@
+FROM alpine:3.13
+
+ARG TEST_RESULT=FAILED
+
+RUN echo "printf \"Build-arg test $TEST_RESULT\\n\"" >> check.sh
+
+ENTRYPOINT ["/bin/sh", "/check.sh"]
diff --git a/test/cases/000_build/030_build_args/build.yml b/test/cases/000_build/030_build_args/build.yml
new file mode 100644
index 000000000..f278801ef
--- /dev/null
+++ b/test/cases/000_build/030_build_args/build.yml
@@ -0,0 +1,7 @@
+image: build-args-test
+network: true
+arches:
+    - amd64
+    - arm64
+buildArgs:
+    - TEST_RESULT=PASSED
diff --git a/test/cases/000_build/030_build_args/test.sh b/test/cases/000_build/030_build_args/test.sh
new file mode 100755
index 000000000..1d7bc1b38
--- /dev/null
+++ b/test/cases/000_build/030_build_args/test.sh
@@ -0,0 +1,18 @@
+#!/bin/sh
+# SUMMARY: Check that the build-args are correctly passed to Dockerfiles
+# LABELS:
+# REPEAT:
+
+set -ex
+
+# Source libraries. Uncomment if needed/defined
+#. "${RT_LIB}"
+. "${RT_PROJECT_ROOT}/_lib/lib.sh"
+
+# Test code goes here
+echo Linuxkig is "$(which linuxkit)"
+RESULT="$(2>&1 linuxkit pkg build --force . | grep PASSED)"
+echo RESULT="${RESULT}"
+echo "${RESULT}" | grep  "Build-arg test PASSED"
+
+exit 0
-- 
2.25.1

